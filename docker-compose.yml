version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICKTIME: 2000

  kafka:
    # "`-.,-'"-._,-'"-.,-'"`-.,-'"-._,-'"-.,-'"`-.,-'"-._,-'"-._,-
    # An important note about accessing Kafka from clients on other machines:
    # -----------------------------------------------------------------------
    #
    # The config used here exposes port 29092 for external connections to the broker
    # i.e. those from outside the docker network. This could be from the host machine
    # running docker, or maybe further afield if you've got a more complicated setup.
    # If the latter is true, you will need to change the value 'localhost' in
    # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those
    # remote clients
    #
    # For connections internal to the docker network, such as from other services
    # and components, use kafka:9092.
    #
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
    # "-._,-'"-.,-'"`-.,-'"-._,-'"-.,-'"`-.,-'"-._,-'"-.,-'"`-.,-
    #
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "api-to-index:3:1"


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
  prometheus:
    image: prom/prometheus:v2.24.0
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always

  api-search-request:
    build: APISearchRequest/
    container_name: APISearchRequest
    restart: always
    ports:
      - '9002:9002'
    depends_on:
      - kafka

  api-url-to-index:
    build: APIUrlToIndex/
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=api-to-index
    container_name: APIUrlToIndex
    restart: always
    ports:
      - '9001:9001'

  crawler:
    build: Crawler/
    container_name: Crawler
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=api-to-index
    restart: always



volumes:
  grafana-storage:
  prometheus_data: